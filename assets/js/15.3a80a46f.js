(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{280:function(_,v,e){"use strict";e.r(v);var o=e(14),i=Object(o.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"chromium-88-0-4298-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#chromium-88-0-4298-0"}},[_._v("#")]),_._v(" "),v("a",{attrs:{href:"https://github.com/chromium/chromium",target:"_blank",rel:"noopener noreferrer"}},[_._v("chromium@88.0.4298.0"),v("OutboundLink")],1)]),_._v(" "),v("blockquote",[v("p",[_._v("https://www.chromium.org")])]),_._v(" "),v("p",[_._v("文档入口·"),v("code",[_._v("docs/README.md")])]),_._v(" "),v("p",[_._v("导航过程·"),v("code",[_._v("docs/navigation.md")])]),_._v(" "),v("ol",[v("li",[_._v("执行当前页面"),v("code",[_._v("beforeunload")])]),_._v(" "),v("li",[_._v("请求URL\n"),v("ul",[v("li",[v("code",[_._v("ServiceWorkers, WebUI, cache, data:")]),_._v("等请求不会真正触发网络")])]),_._v(" "),v("ol",[v("li",[_._v("DNS resolution")]),_._v(" "),v("li",[_._v("socket connection")])])]),_._v(" "),v("li",[_._v("先处理"),v("code",[_._v("response headers")]),_._v(" "),v("ul",[v("li",[_._v("状态码"),v("code",[_._v("204或205")]),_._v("响应成功，但是后面没有内容")]),_._v(" "),v("li",[v("code",[_._v("Content-Disposition")]),_._v(" 该响应头指示必须将响应视为下载而不是导航")]),_._v(" "),v("li",[_._v("状态码"),v("code",[_._v("3xx")]),_._v("，根据"),v("code",[_._v("Location")]),_._v("进行重定向")]),_._v(" "),v("li",[_._v("当返回不是"),v("code",[_._v("204或205")]),_._v("、下载、没有提供"),v("code",[_._v("Content-Type")]),_._v("、没有"),v("code",[_._v("X-Content-Type-Options: nosniff")]),_._v("，则会在进程返回前取一部分内容进行‘MIME类型嗅探’确定返回内容类型")])])]),_._v(" "),v("li",[_._v("commit\n"),v("ul",[v("li",[_._v("响应从网络堆栈传递到浏览器进程")]),_._v(" "),v("li",[_._v("浏览器进程根据"),v("code",[_._v("origin")]),_._v("、"),v("code",[_._v("headers")]),_._v("、当前的进程模型和隔离策略，确定合适的渲染进程")]),_._v(" "),v("li",[_._v("将响应传递给渲染进程")]),_._v(" "),v("li",[_._v("渲染进程执行旧文档的"),v("code",[_._v("unload")]),_._v("，创建新文档\n"),v("ul",[v("li",[_._v("如在同一渲染进程则先后执行")]),_._v(" "),v("li",[_._v("如跨进程，则并行执行")])])])])]),_._v(" "),v("li",[_._v("加载\n"),v("ul",[v("li",[_._v("渲染进程继续加载相应内容，解析、渲染、执行附带的任何脚本，并加载文档指定的任何子资源")])])])]),_._v(" "),v("p",[_._v("网络请求")]),_._v(" "),v("ul",[v("li",[_._v("浏览器进程\n"),v("ul",[v("li",[_._v("清缓存·"),v("code",[_._v("extensions/browser/api/web_request/web_request_api.cc")]),_._v(" "),v("ul",[v("li",[_._v("限制webRequest.handlerBehaviorChanged()清除缓存的次数；")]),_._v(" "),v("li",[_._v("要统计的是缓存真正被清除的次数，而不是函数被调用的次数；")]),_._v(" "),v("li",[_._v("即在下个页面加载时，缓存被清除时计数1次。")])])])])]),_._v(" "),v("li",[_._v("网络进程\n"),v("ul",[v("li",[_._v("·"),v("code",[_._v("net/url_request/url_request_context_builder.h")]),_._v(" "),v("ul",[v("li",[_._v("缓存的最大比特数，默认由算法根据磁盘可用空间计算得出")])])])])])]),_._v(" "),v("p",[_._v("cache·"),v("code",[_._v("components/web_cache/browser/web_cache_manager.cc")])]),_._v(" "),v("ul",[v("li",[_._v("浏览器端的缓存管理；跟踪渲染进程的活动，且分配可用的内存缓存资源")]),_._v(" "),v("li",[_._v("更新缓存· Ln 150")])]),_._v(" "),v("p",[_._v("Sandbox·"),v("code",[_._v("docs/design/sandbox.md")])]),_._v(" "),v("ul",[v("li",[_._v("安全是Chromium最重要的目标之一。安全的关键就是理解：只有充分了解系统在所有可能状态下的所有可能输入组合行为，")]),_._v(" "),v("li",[_._v("才能真正保障系统的安全。对于像Chromium这样大而多样的代码库，几乎不可能对其所有部分的组合行为进行推理。")]),_._v(" "),v("li",[_._v("沙箱的目标就是让一段代码最终能做什么或不能做什么提供强硬的保证，而不管它的输入是什么。")])]),_._v(" "),v("p",[_._v("浏览器的静态地址·"),v("code",[_._v("ios/chrome/browser/chrome_url_constants.cc")])]),_._v(" "),v("p",[_._v("Blink·"),v("code",[_._v("third_party/blink/README.md")])]),_._v(" "),v("ul",[v("li",[_._v("DOM·"),v("code",[_._v("third_party/blink/renderer/core/dom/README.md")])]),_._v(" "),v("li",[_._v("样式计算·"),v("code",[_._v("third_party/blink/renderer/core/css/style-calculation.md")])]),_._v(" "),v("li",[_._v("布局·"),v("code",[_._v("third_party/blink/renderer/core/layout/README.md")])]),_._v(" "),v("li",[_._v("cc·"),v("code",[_._v("docs/how_cc_works.md")])]),_._v(" "),v("li",[_._v("绘制·"),v("code",[_._v("third_party/blink/renderer/core/paint/README.md")])])]),_._v(" "),v("p",[v("a",{attrs:{href:"https://v8.dev/blog/fast-properties",target:"_blank",rel:"noopener noreferrer"}},[_._v("处理JavaScript属性"),v("OutboundLink")],1)]),_._v(" "),v("ul",[v("li",[_._v("JS对象：包括属性（propery）和元素（element）\n"),v("ul",[v("li",[_._v("用不同的使用模式访问和添加属性，更有效")]),_._v(" "),v("li",[_._v("属性\n"),v("ul",[v("li",[_._v("命名属性（named properties）")]),_._v(" "),v("li",[v("code",[_._v("{a:1, b:2}")])]),_._v(" "),v("li",[_._v("以类似元素的方式存储在单独的数组中，另外元数据（HiddenClass）保存键到属性数组中的位置")]),_._v(" "),v("li",[_._v("HiddenClass")])])]),_._v(" "),v("li",[_._v("元素\n"),v("ul",[v("li",[_._v("索引属性（indexed properties）")]),_._v(" "),v("li",[v("code",[_._v("{1:'a', 2:'b'}")]),_._v(" / "),v("code",[_._v("['a', 'b']")])]),_._v(" "),v("li",[_._v("表示为简单数组 - 基于稀疏字典的表示形式以节省内存")]),_._v(" "),v("li",[_._v("主要用于"),v("code",[_._v("Array.prototype")]),_._v("\n在处理整数索引和命名属性方面的区别\n在处理动态添加的属性时提供快速的属性访问(HiddenClasses)\n内联缓存\nsparse dictionary稀疏字典")])])])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);