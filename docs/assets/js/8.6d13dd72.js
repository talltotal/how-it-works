(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{180:function(e,t,n){"use strict";n.r(t);var i=n(0),c=Object(i.a)({},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"mini-css-extract-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mini-css-extract-plugin","aria-hidden":"true"}},[this._v("#")]),this._v(" "),t("a",{attrs:{href:"https://github.com/webpack-contrib/mini-css-extract-plugin",target:"_blank",rel:"noopener noreferrer"}},[this._v("mini-css-extract-plugin"),t("OutboundLink")],1)]),this._v(" "),this._m(0),this._v(" "),this._m(1)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("plugin + loader 的组合")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("loader.pitch\n"),n("ul",[n("li",[e._v("创建子解析器，并运行解析其他 "),n("code",[e._v("loader")]),e._v(" 作用后的结果，将其转换为自定义 "),n("code",[e._v("Dependency")]),e._v(" 类")]),e._v(" "),n("li",[e._v("另外用 "),n("code",[e._v("async")]),e._v(" 给依赖返回提示内容")])])]),e._v(" "),n("li",[e._v("plugin\n"),n("ul",[n("li",[e._v("注册自定义 "),n("code",[e._v("Dependency")]),e._v("/"),n("code",[e._v("DependencyFactory")]),e._v("/"),n("code",[e._v("DependencyTemplate")]),e._v(" 类")]),e._v(" "),n("li",[e._v("在 "),n("code",[e._v("mainTemplate.renderManifest")]),e._v(" 和 "),n("code",[e._v("chunkTemplate.renderManifest")]),e._v(" 时，为自定义类增加 "),n("code",[e._v("chunk")]),e._v(" 从而增加文件")])])])])}],!1,null,null,null);t.default=c.exports}}]);