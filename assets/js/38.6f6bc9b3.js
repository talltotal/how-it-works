(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{303:function(v,_,e){"use strict";e.r(_);var o=e(14),c=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"i18next-scanner"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#i18next-scanner"}},[v._v("#")]),v._v(" "),_("a",{attrs:{href:"https://github.com/i18next/i18next-scanner",target:"_blank",rel:"noopener noreferrer"}},[v._v("i18next-scanner"),_("OutboundLink")],1)]),v._v(" "),_("ol",[_("li",[v._v("使用 "),_("code",[v._v("vinyl-fs")]),v._v(" 做文件处理管理；加载 "),_("code",[v._v("input")]),v._v(" 文件，"),_("code",[v._v("options")]),v._v(" 配置解析器，"),_("code",[v._v("output")]),v._v(" 输出文件")]),v._v(" "),_("li",[v._v("为所有文件单例一个解析器实例\n"),_("ul",[_("li",[v._v("加载支持指定 "),_("code",[v._v("lngs")]),v._v(" 和 "),_("code",[v._v("ns")]),v._v(" 的 "),_("code",[v._v("loadPath")]),v._v(" 文件，并存入内存数据结构中")])])]),v._v(" "),_("li",[v._v("当文件后缀匹配配置 "),_("code",[v._v("extensions")]),v._v(" 时，使用解析器实例做相应处理\n"),_("ul",[_("li",[v._v("获取key\n"),_("ul",[_("li",[v._v("函数："),_("code",[v._v("Func")]),v._v(" 如 "),_("code",[v._v("i18next.t('key')")]),v._v(" "),_("ul",[_("li",[v._v("使用 "),_("code",[v._v("func.list")]),v._v(" 配置，拼接 "),_("code",[v._v("key")]),v._v(" 部分的正则，匹配文件内容获取函数的 "),_("code",[v._v("key")]),v._v(" 部分")]),v._v(" "),_("li",[v._v("使用 "),_("code",[v._v("{}[]()")]),v._v(" 栈结构获取函数的参数部分，并用 "),_("code",[v._v("esprima")]),v._v(" 做解析，得到各属性名，取其中的以下属性作为配置数据\n"),_("ul",[_("li",[_("code",[v._v("defaultValue")])]),v._v(" "),_("li",[_("code",[v._v("defaultValue_plural")])]),v._v(" "),_("li",[_("code",[v._v("count: number")]),v._v(" 配置了即说明存在复数形式")]),v._v(" "),_("li",[_("code",[v._v("context: any")]),v._v(" 上下文数据")]),v._v(" "),_("li",[_("code",[v._v("ns")])]),v._v(" "),_("li",[_("code",[v._v("keySeparator")])]),v._v(" "),_("li",[_("code",[v._v("nsSeparator")])])])])])]),v._v(" "),_("li",[v._v("属性："),_("code",[v._v("Attr")]),v._v(" 如 "),_("code",[v._v('data-i18n="key"')]),v._v(" "),_("ul",[_("li",[v._v("使用 "),_("code",[v._v("parse5")]),v._v(" 得到 "),_("code",[v._v("ast")])]),v._v(" "),_("li",[v._v("递归遍历节点找到匹配 "),_("code",[v._v("attrs.list")]),v._v(" 的属性，得到 "),_("code",[v._v("key")])])])]),v._v(" "),_("li",[v._v("组件："),_("code",[v._v("Comp")]),v._v(" 如 "),_("code",[v._v("<Trans />")]),v._v(" "),_("ul",[_("li",[v._v("使用 "),_("code",[v._v("acorn")]),v._v("+"),_("code",[v._v("acorn-stage3")]),v._v("+"),_("code",[v._v("acornJsx")]),v._v(" 得到 "),_("code",[v._v("ast")]),v._v(" （所以不支持"),_("code",[v._v(".tsx")]),v._v("）")]),v._v(" "),_("li",[v._v("使用 "),_("code",[v._v("acorn-walk")]),v._v(" 遍历节点，对 "),_("code",[v._v("JSXElement")]),v._v(" 即组件元素进行判断取组件属性")]),v._v(" "),_("li",[v._v("从属性中取 "),_("code",[v._v("key")]),v._v("、默认值等配置")])])])])]),v._v(" "),_("li",[v._v("缓存key\n"),_("ul",[_("li",[v._v("按 "),_("code",[v._v("nsSeparator")]),v._v(" 拆分，得到 "),_("code",[v._v("ns")]),v._v(" ；按 "),_("code",[v._v("keySeparator")]),v._v(" 拆分，得到分层级的 "),_("code",[v._v("key")])]),v._v(" "),_("li",[v._v("处理上下文、单复数后缀后，得到多个 "),_("code",[v._v("key")])]),v._v(" "),_("li",[v._v("配合默认值得到 "),_("code",[v._v("key")]),v._v(" 的 "),_("code",[v._v("value")])]),v._v(" "),_("li",[v._v("将 "),_("code",[v._v("key")]),v._v("/"),_("code",[v._v("value")]),v._v(" 存入 "),_("code",[v._v("lngs")]),v._v(" 下对应 "),_("code",[v._v("ns")])])])])])]),v._v(" "),_("li",[v._v("取单例解析器中数据，使用 "),_("code",[v._v("this.push")]),v._v("+"),_("code",[v._v("vinyl")]),v._v(" 生成对应的文件")])])])}),[],!1,null,null,null);_.default=c.exports}}]);