(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{288:function(t,e,a){"use strict";a.r(e);var s=a(14),v=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"lodash-deepclone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodash-deepclone"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://github.com/lodash/lodash/blob/master/.internal/baseClone.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("lodash.deepClone"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"浅拷贝与深拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝与深拷贝"}},[t._v("#")]),t._v(" 浅拷贝与深拷贝")]),t._v(" "),e("ul",[e("li",[t._v("浅拷贝：两个对象共享属性")]),t._v(" "),e("li",[t._v("深拷贝：区分不同的数据类型，递归拷贝；另避免属性中的循环引用")])]),t._v(" "),e("h2",{attrs:{id:"基本类型与引用类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本类型与引用类型"}},[t._v("#")]),t._v(" 基本类型与引用类型")]),t._v(" "),e("ul",[e("li",[t._v("基本类型：值不可变\n"),e("blockquote",[e("p",[t._v("值称为原始值( primitive values )\n有："),e("code",[t._v("Boolean")]),t._v("、"),e("code",[t._v("Null")]),t._v("、"),e("code",[t._v("Undefined")]),t._v("、"),e("code",[t._v("Number")]),t._v("、"),e("code",[t._v("BigInt")]),t._v("、"),e("code",[t._v("String")]),t._v("、"),e("code",[t._v("Symbol")])])])]),t._v(" "),e("li",[t._v("引用类型：以标识符引用的一块内存区域，此区域即一组属性的集合\n"),e("blockquote",[e("p",[t._v("都继承自 "),e("code",[t._v("Object")])])])])]),t._v(" "),e("h3",{attrs:{id:"区分方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区分方式"}},[t._v("#")]),t._v(" 区分方式")]),t._v(" "),e("ol",[e("li",[t._v("使用"),e("code",[t._v("typeof")]),t._v("操作符\n"),e("ul",[e("li",[t._v("引用类型中除了"),e("code",[t._v("Function")]),t._v("对象为"),e("code",[t._v("function")]),t._v("，其他都是"),e("code",[t._v("object")]),t._v("；")]),t._v(" "),e("li",[t._v("基本类型中"),e("code",[t._v("null")]),t._v("值为"),e("code",[t._v("object")]),t._v("，即"),e("code",[t._v("typeof null === 'object'")]),t._v("，理解为‘空指针’")])])]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("Object.prototype.toString")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Object.prototype.toString.call(value)")]),t._v(" 即可")]),t._v(" "),e("li",[t._v("其中"),e("code",[t._v("Null")]),t._v("、"),e("code",[t._v("Undefined")]),t._v("从「JavaScript 1.8.5」开始支持，需做兼容处理")])])])]),t._v(" "),e("h2",{attrs:{id:"引用类型的拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用类型的拷贝"}},[t._v("#")]),t._v(" 引用类型的拷贝")]),t._v(" "),e("blockquote",[e("p",[t._v("使用原对象的构造函数构造新的对象\n遍历对象属性")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Array")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("RegExp.prototype.exec")]),t._v(" 返回的数组中"),e("code",[t._v("index")]),t._v("、"),e("code",[t._v("input")]),t._v("属性需保留")])])]),t._v(" "),e("li",[e("code",[t._v("Regexp")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("lastIndex")]),t._v("属性额外复制")])])]),t._v(" "),e("li",[e("code",[t._v("Symbol")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Object(Symbol.prototype.valueOf.call(value))")])])])])]),t._v(" "),e("h2",{attrs:{id:"对象遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象遍历"}},[t._v("#")]),t._v(" 对象遍历")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("Object.prototype.propertyIsEnumerable")]),t._v(" 判断某属性是否可枚举\n"),e("code",[t._v("Object.prototype.hasOwnProperty()")]),t._v(" 判断对象"),e("strong",[t._v("自身")]),t._v("是否有某"),e("strong",[t._v("可枚举")]),t._v("属性，包括 ‘字符串’、‘Symbol’\n‘自身’指非原型链继承的属性")])]),t._v(" "),e("ul",[e("li",[t._v("类数组对象的"),e("code",[t._v("index")])]),t._v(" "),e("li",[e("code",[t._v("for...in")]),t._v(" 获取对象上的所有"),e("strong",[t._v("可枚举")]),t._v("的 ‘字符串’ 属性")]),t._v(" "),e("li",[e("code",[t._v("Object.keys")]),t._v(" 获取对象"),e("strong",[t._v("自身")]),t._v("上的所有"),e("strong",[t._v("可枚举")]),t._v("的 ‘字符串’ 属性")]),t._v(" "),e("li",[e("code",[t._v("Object.getOwnPropertyNames()")]),t._v(" 获取对象"),e("strong",[t._v("自身")]),t._v("上的所有 ‘字符串’ 属性（包括不可枚举）")]),t._v(" "),e("li",[e("code",[t._v("Object.getOwnPropertySymbols()")]),t._v(" 获取对象"),e("strong",[t._v("自身")]),t._v("上的所有 ‘Symbol’ 属性（包括不可枚举）\n"),e("blockquote",[e("p",[t._v("对象初始的时候不会有任何‘Symbol’属性")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("code",[t._v("for...in")])]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("code",[t._v("keys()")])]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("code",[t._v("getOwnPropertyNames()")])]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("code",[t._v("getOwnPropertySymbols()")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("包括继承")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Y")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")])]),t._v(" "),e("tr",[e("td",[t._v("包括不可枚举")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("N")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Y")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Y")])]),t._v(" "),e("tr",[e("td",[t._v("类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol")])])])]),t._v(" "),e("h2",{attrs:{id:"位运算状态器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#位运算状态器"}},[t._v("#")]),t._v(" 位运算状态器")]),t._v(" "),e("blockquote",[e("p",[t._v("在一个值中定义多种状态值")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {number} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseClone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bitmask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" customizer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isDeep "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bitmask "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLONE_DEEP_FLAG")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isFlat "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bitmask "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLONE_FLAT_FLAG")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isFull "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bitmask "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLONE_SYMBOLS_FLAG")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("设计：在0/1的值中，0代表"),e("code",[t._v("false")]),t._v("，1代表"),e("code",[t._v("true")]),t._v("，将值的某一位的0/1值约定为一种状态的是与否；")]),t._v(" "),e("li",[t._v("取值：使用"),e("code",[t._v("&")]),t._v("操作符")]),t._v(" "),e("li",[t._v("定值：要为多个状态设置为"),e("code",[t._v("true")]),t._v("时，状态值相加即可")])])])}),[],!1,null,null,null);e.default=v.exports}}]);