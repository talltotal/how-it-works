(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{293:function(e,t,v){"use strict";v.r(t);var a=v(14),i=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vue-lazyload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-lazyload"}},[e._v("#")]),e._v(" vue-lazyload")]),e._v(" "),t("h2",{attrs:{id:"main"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[e._v("#")]),e._v(" main")]),e._v(" "),t("ul",[t("li",[e._v("加载阈值：临近视窗范围内")]),e._v(" "),t("li",[e._v("处理方式\n"),t("ul",[t("li",[e._v("事件监听："),t("code",[e._v("'scroll', 'wheel', 'mousewheel', 'resize', 'animationend', 'transitionend', 'touchmove'")])]),e._v(" "),t("li",[t("code",[e._v("IntersectionObserver")])])])]),e._v(" "),t("li",[e._v("处理算法：所有懒加载图片元素在一个队列里")]),e._v(" "),t("li",[e._v("图片载入：异步请求，利用缓存")])]),e._v(" "),t("h3",{attrs:{id:"细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#细节"}},[e._v("#")]),e._v(" 细节")]),e._v(" "),t("ul",[t("li",[e._v("loading class / loading img ｜ error class / error img")]),e._v(" "),t("li",[e._v("加入 container 概念，在 dom 树节点做统一处理")]),e._v(" "),t("li",[e._v("throttle")]),e._v(" "),t("li",[e._v("加载失败可重新尝试加载：attempt 加载次数")]),e._v(" "),t("li",[e._v("不同分辨率的屏幕可以用不同像素的图片，平衡网络带宽和视觉效果：srcset 支持多值，根据 devicePixelRatio 取最佳值")])]),e._v(" "),t("h2",{attrs:{id:"vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[e._v("#")]),e._v(" vue")]),e._v(" "),t("ul",[t("li",[e._v("插件: "),t("code",[e._v("{ install: (Vue, options) => {} }")])]),e._v(" "),t("li",[e._v("注册能力\n"),t("ol",[t("li",[e._v("属性："),t("code",[e._v("Vue.prototype")])]),e._v(" "),t("li",[e._v("组件："),t("code",[e._v("Vue.component")])]),e._v(" "),t("li",[e._v("指令："),t("code",[e._v("Vue.directive")]),e._v(" - "),t("code",[e._v("bind / update / componentUpdated / unbind")])])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);